{"version":3,"names":[],"mappings":"","sources":["admin.bundle.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n// declare a new module called \"myApp\", and make it require the `ng-admin` module as a dependency\nvar myApp = angular.module(\"myApp\", [\"ng-admin\"]);\n\n// declare a function to run when the module bootstraps (during the \"config\" phase)\nvar apiFlavor = require(\"./api_flavor\");\nmyApp.config([\"RestangularProvider\", apiFlavor.requestInterceptor]);\nmyApp.config([\"RestangularProvider\", apiFlavor.responseInterceptor]);\n\n// configure directive\nmyApp.directive(\"toggleApiUser\", require(\"./api_users/toggleApiUser\"));\nmyApp.directive(\"notifySubscriber\", require(\"./events/notifySubscriber\"));\nmyApp.directive(\"dashboardSummary\", require(\"./dashboard/dashboardSummary\"));\n\n// add notify subscriber state page\nmyApp.config([\"$stateProvider\", require(\"./events/notifySubscriberState\")]);\n\n// custom translation reference\nmyApp.config([\"$translateProvider\", function ($translateProvider) {\n    $translateProvider.translations(\"en\", {\n        SEND_NOTIFICATION: \"Send Notification\"\n    });\n}]);\n\n// custom controllers\nmyApp.controller(\"loginuser\", [\"$scope\", \"$window\", function ($scope, $window) {\n    // used in header.html\n    $scope.apiKey = $window.localStorage.getItem(\"kw_api_key_store\");\n}]);\n\nvar headerTemplate = \"<div class=\\\"navbar-header\\\">\" + \"<button type=\\\"button\\\" class=\\\"navbar-toggle\\\" ng-click=\\\"isCollapsed = !isCollapsed\\\">\" + \"<span class=\\\"icon-bar\\\"></span>\" + \"<span class=\\\"icon-bar\\\"></span>\" + \"<span class=\\\"icon-bar\\\"></span>\" + \"</button>\" + \"<a class=\\\"navbar-brand\\\" href=\\\"#\\\" ng-click=\\\"appController.displayHome()\\\">KW API</a>\" + \"</div>\" + \"<ul class=\\\"nav navbar-top-links navbar-right hidden-xs\\\">\" + \"<li uib-dropdown>\" + \"<a uib-dropdown-toggle href=\\\"#\\\" aria-expanded=\\\"true\\\" ng-controller=\\\"loginuser\\\">\" + \"<i class=\\\"fa fa-user fa-lg\\\"></i>&nbsp;{{ apiKey }}&nbsp;<i class=\\\"fa fa-caret-down\\\"></i>\" + \"</a>\" + \"<ul class=\\\"dropdown-menu dropdown-user\\\" role=\\\"menu\\\">\" + \"<li><a href=\\\"#\\\" onclick=\\\"logout()\\\"><i class=\\\"fa fa-sign-out fa-fw\\\"></i> Logout</a></li>\" + \"</ul>\" + \"</li></ul>\";\n\nmyApp.config([\"NgAdminConfigurationProvider\", function (nga) {\n    // create an admin application\n    var admin = nga.application(\"KW API\").baseApiUrl(\"/v1/\");\n\n    // add entities\n    admin.addEntity(nga.entity(\"api_users\"));\n    admin.addEntity(nga.entity(\"events\"));\n    admin.addEntity(nga.entity(\"subscribers\"));\n\n    // configure entities\n    require(\"./api_users/config\")(nga, admin);\n    require(\"./events/config\")(nga, admin);\n    require(\"./subscribers/config\")(nga, admin);\n\n    // dashboard custom\n    admin.dashboard(require(\"./dashboard/config\")(nga, admin));\n\n    // header custom\n    admin.header(headerTemplate);\n\n    /////////////////\n    // menu custom //\n    /////////////////\n    admin.menu(nga.menu().addChild(nga.menu(admin.getEntity(\"api_users\")).icon(\"<span class=\\\"glyphicon glyphicon-user\\\"></span>\")).addChild(nga.menu(admin.getEntity(\"events\")).icon(\"<span class=\\\"glyphicon glyphicon-bullhorn\\\"></span>\")).addChild(nga.menu(admin.getEntity(\"subscribers\")).icon(\"<span class=\\\"glyphicon glyphicon-envelope\\\"></span>\")).addChild(nga.menu().title(\"Statistics\").icon(\"<span class=\\\"glyphicon glyphicon-stats\\\"></span>\").addChild(nga.menu().title(\"Queue Stats\").icon(\"<span class=\\\"glyphicon glyphicon-stats\\\"></span>\").link(\"/stats/queues\").active(function (path) {\n        return path.indexOf(\"/stats/queues\") === 0;\n    })).addChild(nga.menu().title(\"Event Stats\").icon(\"<span class=\\\"glyphicon glyphicon-stats\\\"></span>\").link(\"/stats/events\").active(function (path) {\n        return path.indexOf(\"/stats/events\") === 0;\n    })).addChild(nga.menu().title(\"API Stats\").icon(\"<span class=\\\"glyphicon glyphicon-stats\\\"></span>\").link(\"/stats/api\").active(function (path) {\n        return path.indexOf(\"/stats/api\") === 0;\n    }))));\n\n    // attach the admin application to the DOM and execute it\n    nga.configure(admin);\n}]);\n\n},{\"./api_flavor\":2,\"./api_users/config\":3,\"./api_users/toggleApiUser\":4,\"./dashboard/config\":5,\"./dashboard/dashboardSummary\":6,\"./events/config\":7,\"./events/notifySubscriber\":8,\"./events/notifySubscriberState\":10,\"./subscribers/config\":11}],2:[function(require,module,exports){\n\"use strict\";\n\nfunction requestInterceptor(RestangularProvider) {\n    // use the custom query parameters function to format the API request correctly\n    RestangularProvider.addFullRequestInterceptor(function (element, operation, what, url, headers, params, httpConfig) {\n        if (operation == \"getList\") {\n            params.page = params._page; // change page variable\n            delete params._page;\n        }\n        headers[\"apiKey\"] = window.localStorage.getItem(\"kw_api_key_store\");\n        return { params: params, headers: headers };\n    });\n};\n\nfunction responseInterceptor(RestangularProvider) {\n    RestangularProvider.addResponseInterceptor(function (data, operation, what, url, response, deffered) {\n        var extractedData = data;\n        if (operation === \"getList\") {\n            extractedData = data.data;\n            response.totalCount = data.total; //set totalCount manually\n        }\n        return extractedData;\n    });\n};\n\nmodule.exports = { requestInterceptor: requestInterceptor, responseInterceptor: responseInterceptor };\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function (nga, admin) {\n    var apiUsers = admin.getEntity(\"api_users\");\n\n    apiUsers.listView().fields([nga.field(\"id\"), nga.field(\"apiKey\"), nga.field(\"company\"), nga.field(\"application\"), nga.field(\"email\")]).title(\"Api Users List\").perPage(10).listActions([\n    //\"<toggle-api-user size=\\\"xs\\\" api-user=\\\"::entry\\\"></toggle-api-user>\",\n    \"show\", \"edit\"]).filters([nga.field(\"apiKey\"), nga.field(\"company\")]);\n\n    apiUsers.showView().fields([nga.field(\"id\"), nga.field(\"apiKey\"), nga.field(\"company\"), nga.field(\"application\"), nga.field(\"email\"), nga.field(\"isActive\"), nga.field(\"created_at\"), nga.field(\"updated_at\"), nga.field(\"events\", \"referenced_list\") // display list of related events\n    .targetEntity(nga.entity(\"events\")).targetReferenceField(\"apiUser\").targetFields([nga.field(\"id\").isDetailLink(true), nga.field(\"object\"), nga.field(\"action\"), nga.field(\"version\"), nga.field(\"created_at\")]).sortField(\"created_at\").sortDir(\"desc\").listActions([\"show\", \"edit\"]).label(\"Latest Events\"), nga.field(\"\", \"template\").label(\"\").template(\"<ma-filtered-list-button entity-name=\\\"events\\\" filter=\\\"{ apiUser: entry.values.id }\\\" size=\\\"sm\\\"></ma-filtered-list-button>\")]).title(\"Api User\").actions([\"<ma-filtered-list-button entity-name=\\\"events\\\" filter=\\\"{ apiUser: entry.values.id }\\\" label=\\\"Events\\\"></ma-filtered-list-button>\", \"<toggle-api-user api-user=\\\"::entry\\\"></toggle-api-user>\", \"list\"]);\n\n    apiUsers.creationView().fields([nga.field(\"apiKey\").validation({ required: true, minlength: 3, maxlength: 255 }), nga.field(\"company\").validation({ required: true, minlength: 3, maxlength: 255 }), nga.field(\"application\").validation({ required: true, minlength: 3, maxlength: 255 }), nga.field(\"email\", \"email\").validation({ required: true, maxlength: 255 })]).title(\"Api User\").actions([\"list\"]);\n\n    apiUsers.editionView().fields([nga.field(\"apiKey\").validation({ required: true, minlength: 3, maxlength: 255 }), nga.field(\"company\").validation({ required: true, minlength: 3, maxlength: 255 }), nga.field(\"application\").validation({ required: true, minlength: 3, maxlength: 255 }), nga.field(\"email\", \"email\").validation({ required: true, maxlength: 255 }), nga.field(\"isActive\").editable(false), nga.field(\"events\", \"referenced_list\") // display list of related events\n    .targetEntity(nga.entity(\"events\")).targetReferenceField(\"apiUser\").targetFields([nga.field(\"id\").isDetailLink(true), nga.field(\"object\"), nga.field(\"action\"), nga.field(\"version\"), nga.field(\"created_at\")]).sortField(\"created_at\").sortDir(\"desc\").listActions([\"show\", \"edit\"]).label(\"Latest Events\"), nga.field(\"\", \"template\").label(\"\").template(\"<ma-filtered-list-button entity-name=\\\"events\\\" filter=\\\"{ apiUser: entry.values.id }\\\" size=\\\"sm\\\"></ma-filtered-list-button>\")]).title(\"Api User\").actions([\"<ma-filtered-list-button entity-name=\\\"events\\\" filter=\\\"{ apiUser: entry.values.id }\\\" label=\\\"Events\\\"></ma-filtered-list-button>\", \"<toggle-api-user api-user=\\\"::entry\\\"></toggle-api-user>\", \"list\"]);\n\n    apiUsers.editionView().onSubmitError([\"error\", \"form\", \"progression\", \"notification\", function (error, form, progression, notification) {\n        // stop the progress bar\n        progression.done();\n        // add a notification\n        notification.log(\"error \" + error.data.code + \": \" + error.data.message, { addnCls: \"humane-flatty-error\" });\n        // cancel the default action (default error messages)\n        return false;\n    }]);\n\n    apiUsers.creationView().onSubmitError(apiUsers.editionView().onSubmitError());\n\n    return apiUsers;\n};\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nfunction toggleApiUser(Restangular, $state, notification) {\n    \"use strict\";\n\n    return {\n        restrict: \"E\",\n        scope: {\n            apiUser: \"&\",\n            size: \"@\"\n        },\n        link: function link(scope, element, attrs) {\n            scope.apiUser = scope.apiUser();\n            scope.type = attrs.type;\n            scope.toggle = function () {\n                Restangular.one(\"api_users\", scope.apiUser.values.id).get().then(function (apiUser) {\n                    return apiUser.data.customGET(\"toggle\");\n                }).then(function () {\n                    return $state.reload();\n                }).then(function () {\n                    return notification.log(\"Toggle Api User Done\", { addnCls: \"humane-flatty-success\" });\n                }).catch(function (e) {\n                    return notification.log(\"A problem occurred, please try again\", { addnCls: \"humane-flatty-error\" });\n                });\n            };\n        },\n\n        template: \" <a ng-if=\\\"apiUser.values.isActive == 0\\\" class=\\\"btn btn-outline btn-success\\\" ng-class=\\\"size ? 'btn-' + size : ''\\\" ng-click=\\\"toggle()\\\">\\n    <span class=\\\"glyphicon glyphicon-thumbs-up\\\" aria-hidden=\\\"true\\\"></span>&nbsp;Enable\\n</a>\\n<a ng-if=\\\"apiUser.values.isActive == 1\\\" class=\\\"btn btn-outline btn-danger\\\" ng-class=\\\"size ? 'btn-' + size : ''\\\" ng-click=\\\"toggle()\\\">\\n    <span class=\\\"glyphicon glyphicon-thumbs-down\\\" aria-hidden=\\\"true\\\"></span>&nbsp;Disable\\n</a>\"\n    };\n};\n\ntoggleApiUser.$inject = [\"Restangular\", \"$state\", \"notification\"];\n\nexports[\"default\"] = toggleApiUser;\nmodule.exports = exports[\"default\"];\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function (nga, admin) {\n    return nga.dashboard().addCollection(nga.collection(admin.getEntity(\"api_users\")).name(\"latest_api_users\").title(\"Latest ApiUsers\").fields([nga.field(\"id\"), nga.field(\"apiKey\"), nga.field(\"company\")]).sortField(\"id\").sortDir(\"desc\").perPage(5)).addCollection(nga.collection(admin.getEntity(\"events\")).name(\"latest_events\").title(\"Latest Events\").fields([nga.field(\"id\"), nga.field(\"object\"), nga.field(\"action\"), nga.field(\"version\")]).sortField(\"id\").sortDir(\"desc\").perPage(5)).addCollection(nga.collection(admin.getEntity(\"subscribers\")).name(\"latest_subscribers\").title(\"Latest Subscribers\").fields([nga.field(\"id\"), nga.field(\"event_id\", \"reference\").targetEntity(admin.getEntity(\"events\")).targetField(nga.field(\"id\")).label(\"Event\"), nga.field(\"api_user_id\", \"reference\").targetEntity(admin.getEntity(\"api_users\")).targetField(nga.field(\"company\")).label(\"Api User Company\")]).sortField(\"id\").sortDir(\"desc\").perPage(5)).template(\"\\n<div class=\\\"row dashboard-starter\\\"></div>\\n<dashboard-summary></dashboard-summary>\\n<div class=\\\"row dashboard-content\\\">\\n    <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"panel panel-green\\\">\\n            <ma-dashboard-panel collection=\\\"dashboardController.collections.latest_api_users\\\" entries=\\\"dashboardController.entries.latest_api_users\\\" datastore=\\\"dashboardController.datastore\\\"></ma-dashboard-panel>\\n        </div>\\n        <div class=\\\"panel panel-yellow\\\">\\n            <ma-dashboard-panel collection=\\\"dashboardController.collections.latest_events\\\" entries=\\\"dashboardController.entries.latest_events\\\" datastore=\\\"dashboardController.datastore\\\"></ma-dashboard-panel>\\n        </div>\\n    </div>\\n    <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <ma-dashboard-panel collection=\\\"dashboardController.collections.latest_subscribers\\\" entries=\\\"dashboardController.entries.latest_subscribers\\\" datastore=\\\"dashboardController.datastore\\\"></ma-dashboard-panel>\\n        </div>\\n    </div>\\n</div>\\n\");\n};\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\nvar hasSeenAlert = false;\nvar dashboardSummaryTemplate = \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n        <uib-alert type=\\\"info\\\" close=\\\"dismissAlert()\\\" ng-show=\\\"!hasSeenAlert\\\">\\n            Welcome to the KW-API.\\n        </uib-alert>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"panel panel-primary\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-xs-3\\\">\\n                        <i class=\\\"fa fa-tasks fa-5x\\\"></i>\\n                    </div>\\n                    <div class=\\\"col-xs-9 text-right\\\">\\n                        <div class=\\\"huge\\\">{{mqStats.queue_totals.messages}}</div>\\n                        <div>Queue, {{mqStats.queue_totals.messages_details.rate}}/s rate.</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <a href=\\\"#/stats/queues\\\">\\n                <div class=\\\"panel-footer\\\">\\n                    <span class=\\\"pull-left\\\">View Details</span>\\n                    <span class=\\\"pull-right\\\"><i class=\\\"fa fa-arrow-circle-right\\\"></i></span>\\n                    <div class=\\\"clearfix\\\"></div>\\n                </div>\\n            </a>\\n\\n        </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"panel panel-green\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-xs-3\\\">\\n                        <i class=\\\"fa fa-download fa-5x\\\"></i>\\n                    </div>\\n                    <div class=\\\"col-xs-9 text-right\\\">\\n                        <div class=\\\"huge\\\">{{mqStats.message_stats.deliver_get_details.rate}}/s</div>\\n                        <div>Deliver rate</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <a href=\\\"#/stats/queues\\\">\\n                <div class=\\\"panel-footer\\\">\\n                    <span class=\\\"pull-left\\\">View Details</span>\\n                    <span class=\\\"pull-right\\\"><i class=\\\"fa fa-arrow-circle-right\\\"></i></span>\\n                    <div class=\\\"clearfix\\\"></div>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"panel panel-yellow\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-xs-3\\\">\\n                        <i class=\\\"fa fa-bullhorn fa-5x\\\"></i>\\n                    </div>\\n                    <div class=\\\"col-xs-9 text-right\\\">\\n                        <div class=\\\"huge\\\">{{eventStats.totalCount}}</div>\\n                        <div>Number of Events</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <a ui-sref=\\\"list({entity:'events'})\\\">\\n                <div class=\\\"panel-footer\\\">\\n                    <span class=\\\"pull-left\\\">View Details</span>\\n                    <span class=\\\"pull-right\\\"><i class=\\\"fa fa-arrow-circle-right\\\"></i></span>\\n                    <div class=\\\"clearfix\\\"></div>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"panel panel-red\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-xs-3\\\">\\n                        <i class=\\\"fa fa-bell fa-5x\\\"></i>\\n                    </div>\\n                    <div class=\\\"col-xs-9 text-right\\\">\\n                        <div class=\\\"huge\\\">124</div>\\n                        <div>Add Event Calls</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <a href=\\\"\\\">\\n                <div class=\\\"panel-footer\\\">\\n                    <span class=\\\"pull-left\\\">View Details</span>\\n                    <span class=\\\"pull-right\\\"><i class=\\\"fa fa-arrow-circle-right\\\"></i></span>\\n                    <div class=\\\"clearfix\\\"></div>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n</div>\\n\";\n\nfunction dashboardSummary(Restangular) {\n    \"use strict\";\n\n    return {\n        restrict: \"E\",\n        scope: {},\n        controller: function controller($scope) {\n            $scope.mqStats = {};\n            $scope.eventStats = {};\n            $scope.hasSeenAlert = hasSeenAlert;\n            $scope.dismissAlert = function () {\n                hasSeenAlert = true;\n                $scope.hasSeenAlert = true;\n            };\n            Restangular.one(\"mq\", \"overview\").get().then(function (response) {\n                $scope.mqStats = response.data.plain();\n            });\n            Restangular.all(\"events\").getList().then(function (response) {\n                $scope.eventStats.totalCount = response.totalCount;\n            });\n        },\n\n        template: dashboardSummaryTemplate\n    };\n};\n\ndashboardSummary.$inject = [\"Restangular\"];\n\nexports[\"default\"] = dashboardSummary;\nmodule.exports = exports[\"default\"];\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function (nga, admin) {\n    var events = admin.getEntity(\"events\");\n\n    events.listView().fields([nga.field(\"id\"), nga.field(\"object\"), nga.field(\"action\"), nga.field(\"version\"), nga.field(\"apiUser\", \"reference\").targetEntity(admin.getEntity(\"api_users\")).targetField(nga.field(\"company\")).label(\"Api User Company\"), nga.field(\"created_at\"), nga.field(\"updated_at\")]).perPage(10).listActions([\"show\", \"edit\"]).filters([nga.field(\"object\"), nga.field(\"action\"), nga.field(\"version\"), nga.field(\"apiUser\")]);\n\n    events.showView().fields([nga.field(\"id\"), nga.field(\"apiUser\"), nga.field(\"object\"), nga.field(\"action\"), nga.field(\"version\"), nga.field(\"jsonSchema\", \"text\"), nga.field(\"created_at\"), nga.field(\"updated_at\"), nga.field(\"subscribers\", \"referenced_list\") // display list of related events\n    .targetEntity(nga.entity(\"subscribers\")).targetReferenceField(\"event_id\").targetFields([nga.field(\"id\").isDetailLink(true), nga.field(\"api_user_id\"), nga.field(\"endPoint\"), nga.field(\"created_at\")]).sortField(\"created_at\").sortDir(\"desc\").listActions([\"show\", \"edit\"]).label(\"Latest Subscribers\"), nga.field(\"\", \"template\").label(\"\").template(\"<ma-filtered-list-button entity-name=\\\"subscribers\\\" filter=\\\"{ event_id: entry.values.id }\\\"></ma-filtered-list-button>\")]).actions([\"<ma-filtered-list-button entity-name=\\\"subscribers\\\" filter=\\\"{ event_id: entry.values.id }\\\" label=\\\"Subscribers\\\"></ma-filtered-list-button>\", \"<notify-subscriber event=\\\"::entry\\\"></notify-subscriber>\", \"list\"]);\n\n    events.editionView().fields([nga.field(\"object\").validation({ required: true, maxlength: 255 }), nga.field(\"action\").validation({ required: true, maxlength: 255 }), nga.field(\"version\").validation({ required: true }), nga.field(\"jsonSchema\", \"text\").validation({ required: true }), nga.field(\"subscribers\", \"referenced_list\") // display list of related events\n    .targetEntity(nga.entity(\"subscribers\")).targetReferenceField(\"event_id\").targetFields([nga.field(\"id\").isDetailLink(true), nga.field(\"api_user_id\"), nga.field(\"endPoint\"), nga.field(\"created_at\")]).sortField(\"created_at\").sortDir(\"desc\").listActions([\"show\", \"edit\"]).label(\"Latest Subscribers\"), nga.field(\"\", \"template\").label(\"\").template(\"<ma-filtered-list-button entity-name=\\\"subscribers\\\" size=\\\"sm\\\" filter=\\\"{ event_id: entry.values.id }\\\"></ma-filtered-list-button>\")]).actions([\"<ma-filtered-list-button entity-name=\\\"subscribers\\\" filter=\\\"{ event_id: entry.values.id }\\\" label=\\\"Subscribers\\\"></ma-filtered-list-button>\", \"<notify-subscriber event=\\\"::entry\\\"></notify-subscriber>\", \"list\"]);\n\n    events.editionView().onSubmitError([\"error\", \"form\", \"progression\", \"notification\", function (error, form, progression, notification) {\n        // stop the progress bar\n        progression.done();\n        // add a notification\n        notification.log(\"error \" + error.data.code + \": \" + error.data.message, { addnCls: \"humane-flatty-error\" });\n        // cancel the default action (default error messages)\n        return false;\n    }]);\n\n    return events;\n};\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\nfunction notifySubscriber($location) {\n    \"use strict\";\n\n    return {\n        restrict: \"E\",\n        scope: {\n            event: \"&\",\n            size: \"@\"\n        },\n        link: function link(scope, element, attrs) {\n            scope.notify = function () {\n                $location.path(\"events/\" + scope.event().values.id + \"/notify\");\n            };\n        },\n\n        template: \"<a class=\\\"btn btn-default\\\" ng-class=\\\"size ? 'btn-' + size : ''\\\" ng-click=\\\"notify()\\\">\\n            <span class=\\\"glyphicon glyphicon-thumbs-up\\\" aria-hidden=\\\"true\\\"></span>&nbsp;Notify</a>\"\n    };\n};\n\nnotifySubscriber.$inject = [\"$location\"];\n\nexports[\"default\"] = notifySubscriber;\nmodule.exports = exports[\"default\"];\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\n\nfunction notifySubscriberController($stateParams, notification, Restangular) {\n    this.eventId = $stateParams.id;\n    this.notification = notification;\n    this.Restangular = Restangular;\n};\n\nnotifySubscriberController.prototype.sendNotify = function () {\n    //console.log(this.eventId,this.title,this.message,this.notification);\n    var self = this;\n    this.Restangular.one(\"events\", this.eventId).customPOST({ title: self.title, message: self.message }, \"notify\").then(function (response) {\n        return self.notification.log(\"Event notify to \" + response.data.count + \" subscriber(s)\", { addnCls: \"humane-flatty-success\" });\n    }).catch(function (e) {\n        return self.notification.log(\"A problem occurred, please try again\", { addnCls: \"humane-flatty-error\" });\n    });\n};\n\nnotifySubscriberController.$inject = [\"$stateParams\", \"notification\", \"Restangular\"];\n\nexports[\"default\"] = notifySubscriberController;\nmodule.exports = exports[\"default\"];\n\n},{}],10:[function(require,module,exports){\n\"use strict\";\n\nvar notifySubcriberController = require(\"./notifySubscriberController\");\nvar notifySubcriberControllerTemplate = \"<div class=\\\"row\\\"><div class=\\\"col-lg-12\\\">\" + \"<ma-view-actions><ma-back-button></ma-back-button></ma-view-actions>\" + \"<div class=\\\"page-header\\\">\" + \"<h1>Send Notification Event #{{ controller.eventId }}</h1>\" + \"<p class=\\\"lead\\\">You can send notification for every event subscribers email</p>\" + \"</div>\" + \"</div></div>\" + \"<div class=\\\"row form-field form-group\\\">\" + \"<label class=\\\"col-sm-2 control-label\\\">Title</label>\" + \"<div class=\\\"ng-admin-type-string col-sm-10 col-md-8 col-lg-7\\\"><input type=\\\"text\\\" size=\\\"10\\\" ng-model=\\\"controller.title\\\" class=\\\"form-control\\\" placeholder=\\\"subject / title\\\"/></div>\" + \"</div>\" + \"<div class=\\\"row form-field form-group\\\">\" + \"<label class=\\\"col-sm-2 control-label\\\">Message</label>\" + \"<div class=\\\"ng-admin-type-text col-sm-10 col-md-8 col-lg-7\\\"><textarea class=\\\"form-control\\\" ng-model=\\\"controller.message\\\" placeholder=\\\"message content\\\"></textarea></div>\" + \"</div>\" + \"<div class=\\\"row form-group\\\">\" + \"<div class=\\\"col-sm-offset-2 col-sm-10\\\">\" + \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"controller.sendNotify()\\\"><span class=\\\"glyphicon glyphicon-ok\\\"></span>&nbsp;<span class=\\\"hidden-xs ng-scope\\\" translate=\\\"SEND_NOTIFICATION\\\">Send Notification</span></button>\" + \"</div></div>\";\n\nexports[\"default\"] = function ($stateProvider) {\n    $stateProvider.state(\"eventNotify\", {\n        parent: \"main\",\n        url: \"/events/:id/notify\",\n        params: { id: null },\n        controller: notifySubcriberController,\n        controllerAs: \"controller\",\n        template: notifySubcriberControllerTemplate\n    });\n};\n\nmodule.exports = exports[\"default\"];\n\n},{\"./notifySubscriberController\":9}],11:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function (nga, admin) {\n    var subscribers = admin.getEntity(\"subscribers\");\n\n    subscribers.listView().fields([nga.field(\"id\"), nga.field(\"event_id\", \"reference\").targetEntity(admin.getEntity(\"events\")).targetField(nga.field(\"id\")).label(\"Event\"), nga.field(\"api_user_id\", \"reference\").targetEntity(admin.getEntity(\"api_users\")).targetField(nga.field(\"company\")).label(\"Api User Company\"), nga.field(\"object\"), nga.field(\"action\"), nga.field(\"version\"), nga.field(\"endPoint\"), nga.field(\"created_at\")]).perPage(10).listActions([\"show\", \"edit\"]).filters([nga.field(\"object\"), nga.field(\"action\"), nga.field(\"version\"), nga.field(\"event_id\"), nga.field(\"api_user_id\")]);\n\n    subscribers.showView().fields([nga.field(\"id\"), nga.field(\"event_id\"), nga.field(\"api_user_id\"), nga.field(\"object\"), nga.field(\"action\"), nga.field(\"version\"), nga.field(\"endPoint\"), nga.field(\"created_at\"), nga.field(\"updated_at\")]);\n\n    return subscribers;\n};\n\n},{}]},{},[1]);\n"],"file":"admin.bundle.js","sourceRoot":"/source/"}